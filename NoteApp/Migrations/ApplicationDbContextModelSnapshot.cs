// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoteApp.DataAccess;

#nullable disable

namespace NoteApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NoteApp.Entities.Note", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Note", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3f57e70f-13d2-4720-93b9-9d8b11c34b69",
                            Body = "Widely regarded as \"The Oldest Military Treatise in the World,\" this landmark work covers principles of strategy, tactics, maneuvering, communication, and supplies; the use of terrain, fire, and the seasons of the year; the classification ...",
                            CreatedAt = new DateTime(2023, 1, 11, 13, 33, 23, 111, DateTimeKind.Local).AddTicks(4495),
                            Title = "The Art of War",
                            UpdatedAt = new DateTime(2023, 1, 11, 13, 33, 23, 111, DateTimeKind.Local).AddTicks(4547)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
